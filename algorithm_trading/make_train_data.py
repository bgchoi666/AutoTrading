# Copyright 2021 Bimghi Choi. All Rights Reserved.

# -*- coding:utf-8 -*-

import pandas as pd
import numpy as np
import random

pred_term = 5
base1 = '고가'
base2 = '저가'
target_type = 'C'

last_trains = [
    '2016-12-31',
    '2017-01-15', '2017-01-31', '2017-02-15', '2017-02-28',
    '2017-03-15', '2017-03-31', '2017-04-15', '2017-04-30',
    '2017-05-15', '2017-05-31', '2017-06-15', '2017-06-30',
    '2017-07-15', '2017-07-31', '2017-08-15', '2017-08-31',
    '2017-09-15', '2017-09-30', '2017-10-15', '2017-10-31',
    '2017-11-15', '2017-11-30', '2017-12-15', '2017-12-31',

    '2018-01-15', '2018-01-31', '2018-02-15', '2018-02-28',
    '2018-03-15', '2018-03-31', '2018-04-15', '2018-04-30',
    '2018-05-15', '2018-05-31', '2018-06-15', '2018-06-30',
    '2018-07-15', '2018-07-31', '2018-08-15', '2018-08-31',
    '2018-09-15', '2018-09-30', '2018-10-15', '2018-10-31',
    '2018-11-15', '2018-11-30', '2018-12-15', '2018-12-31',

    '2019-01-15', '2019-01-31', '2019-02-15', '2019-02-28',
    '2019-03-15', '2019-03-31', '2019-04-15', '2019-04-30',
    '2019-05-15', '2019-05-31', '2019-06-15', '2019-06-30',
    '2019-07-15', '2019-07-31', '2019-08-15', '2019-08-31',
    '2019-09-15', '2019-09-30', '2019-10-15', '2019-10-31',
    '2019-11-15', '2019-11-30', '2019-12-15', '2019-12-31',

    '2020-01-15', '2020-01-31', '2020-02-15', '2020-02-28',
    '2020-03-15', '2020-03-31', '2020-04-15', '2020-04-30',
    '2020-05-15', '2020-05-31', '2020-06-15', '2020-06-30',
    '2020-07-15', '2020-07-31', '2020-08-15', '2020-08-31',
    '2020-09-15', '2020-09-30', '2020-10-15', '2020-10-31',
    '2020-11-15', '2020-11-30', '2020-12-15', '2020-12-31',

    '2021-01-15', '2021-01-31', '2021-02-15', '2021-02-28',
    '2021-03-15', '2021-03-31', '2021-04-15', '2021-04-30',
    '2021-05-15', '2021-05-31', '2021-06-15', '2021-06-30',
    '2021-07-15', '2021-07-31', '2021-08-15', '2021-08-31',
    '2021-09-15', '2021-09-30', '2021-10-15', '2021-10-31',
    '2021-11-15', '2021-11-30', '2021-12-15',  '2021-12-31',]

# *_pred.csv 파일이 존재할 떄 undersampling 비율 (target_prob*)에 따라 _norm.csv 파일 생성
def make_train_data(last_train):
    df_pred_path = last_train + '/kospi200f_60M_pred.csv'
    df = pd.read_csv(df_pred_path, encoding='euc-kr')

    # 고저점 예측 - 0: 정상  1: 고점 2: 저점 until pred_term
    target = []
    for i in range(len(df)):
        if i > len(df) - 1 - pred_term:
            target.append(target[-1])
        else:
            if 0 > np.average(df.loc[i+1:i+pred_term-1, '종가'].values - df.loc[i, '종가']):
                target.append(1)
            elif 0 < np.average(df.loc[i+1:i+pred_term-1, '종가'].values - df.loc[i, '종가']):
                target.append(2)
            else:
                target.append(0)
    df['target'] = target

    df.to_csv(df_pred_path, index=False, encoding='euc-kr')

if __name__ == '__main__':
    for last_train in last_trains:
        make_train_data(last_train)